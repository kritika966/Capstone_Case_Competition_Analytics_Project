---
title: "Capstone_Case_Competition"
author: "Kritika"
date: "October 06, 2024"
format: 
  html:
    embed-resources: true
    toc: true
    toc-smooth-scroll: true
    toc-depth: 3
    toc-location: left
    toc-title: "Contents"
execute:
  include: true
  echo: true
  eval: true    
  warning: false
  message: false
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction: Business Problem Statement

The objective of this project is to build a predictive maintenance model for Swire Coca-Cola, aimed at reducing unplanned machine downtimes and enhancing overall operational efficiency. At present, the company faces substantial financial losses and productivity declines due to unexpected equipment failures. 

To overcome these challenges, Swire Coca-Cola seeks to implement a predictive maintenance solution. By analyzing historical data from the Internal Warehouse Controller (IWC) system, the goal is to identify patterns in machine failures, forecast future downtimes, and ensure that necessary parts are available in advance. The solution aims to minimize unplanned downtimes, optimize machine reliability, and improve production capacity while reducing financial losses.

This exploratory data analysis (EDA) serves as the foundation for building the predictive model. Through detailed analysis of machine maintenance records, downtime logs, and operational data, we will uncover the key factors contributing to machine breakdowns. These insights will help shape a data-driven, proactive maintenance approach, enabling Swire Coca-Cola to shift from reactive to predictive maintenance, improve operational efficiency, and better meet production targets.

## Importing Libraries

```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(scales)
```

## Import Dataset

```{r}
# Load the dataset
data <- read.csv("IWC_Work_Orders_Extract.csv")

# Display the first few rows of the dataset
head(data)

```

The dataset gives an in-depth glance at how Swire Coca-Cola manages maintenance across various plants and production sites. It contains important details like maintenance dates, how long they last, whether they are planned or unplanned, and thorough descriptions of the equipment involved. The data covers multiple years, making it possible to analyze trends over time. Important columns such as ACTUAL_WORK_IN_MINUTES and MAINTENANCE_TYPE_DESCRIPTION provide valuable insights into the nature and extent of maintenance activities.

Some interesting patterns stand out from this first look. A lot of entries fall under unplanned, corrective maintenance, which hints at a possibly reactive way of handling equipment maintenance. The dataset includes a range of machinery, and you'll notice that conveyor systems show up quite often in the sample. This detailed dataset will play a key role in examining maintenance trends, spotting equipment that needs regular care, and possibly revealing chances to move from reactive to proactive maintenance approaches. This shift could help minimize unexpected downtime and enhance overall operational efficiency.

### Checking for Missing Data
```{r}
# Check for empty strings in the data
empty_strings <- sapply(data, function(x) sum(x == ""))
print(empty_strings)

# Identify missing data (NA's) columns
cols_with_na <- colnames(data)[colSums(is.na(data)) > 0]
print("Columns with NA values:")
print(cols_with_na)

```

The above code identifies empty strings and columns with missing values (NAs). Columns such as MAINTENANCE_ITEM and EQUIPMENT_ID are identified as having substantial missing data, reinforcing the need to address this issue for accurate analysis.

```{r}
# Replacing empty strings with na
data[data == ""] <- NA
```

This code replaces all empty strings with NA values to standardize the dataset.

```{r}
# Check for missing data
missing_data <- data.frame(Feature = names(data), MissingCount = sapply(data, function(x) sum(is.na(x))))
missing_data
```

### Handling Missing Values for Numeric Data

```{r}
# Handle missing values where necessary
# Impute missing values for 'MAINTENANCE_PLAN' with 'Unplanned' as given the case description

data$MAINTENANCE_PLAN[is.na(data$MAINTENANCE_PLAN)] <- "Unplanned"

# Impute missing values for 'ORDER_DESCRIPTION', 'EQUIPMENT_DESC', 'EQUIP_CAT_DESC', 'MAINTENANCE_TYPE_DESCRIPTION', 'FUNCTIONAL_LOC', 'FUNCTIONAL_AREA_NODE_1_MODIFIED', 'FUNCTIONAL_AREA_NODE_2_MODIFIED', 'FUNCTIONAL_AREA_NODE_3_MODIFIED', 'FUNCTIONAL_AREA_NODE_4_MODIFIED', 'FUNCTIONAL_AREA_NODE_5_MODIFIED' with 'Unknown' as given the case description

data$ORDER_DESCRIPTION[is.na(data$ORDER_DESCRIPTION)] <- "Unknown"
data$EQUIPMENT_DESC[is.na(data$EQUIPMENT_DESC)] <- "Unknown"
data$EQUIP_CAT_DESC[is.na(data$EQUIP_CAT_DESC)] <- "Unknown"
data$FUNCTIONAL_LOC[is.na(data$FUNCTIONAL_LOC)] <- "Unknown"
data$MAINTENANCE_TYPE_DESCRIPTION[is.na(data$MAINTENANCE_TYPE_DESCRIPTION)] <- "Unknown"
data$FUNCTIONAL_AREA_NODE_1_MODIFIED[is.na(data$FUNCTIONAL_AREA_NODE_1_MODIFIED)] <- "Unknown"
data$FUNCTIONAL_AREA_NODE_2_MODIFIED[is.na(data$FUNCTIONAL_AREA_NODE_1_MODIFIED)] <- "Unknown"
data$FUNCTIONAL_AREA_NODE_3_MODIFIED[is.na(data$FUNCTIONAL_AREA_NODE_1_MODIFIED)] <- "Unknown"
data$FUNCTIONAL_AREA_NODE_4_MODIFIED[is.na(data$FUNCTIONAL_AREA_NODE_1_MODIFIED)] <- "Unknown"
data$FUNCTIONAL_AREA_NODE_5_MODIFIED[is.na(data$FUNCTIONAL_AREA_NODE_1_MODIFIED)] <- "Unknown"
```

For the missing values (NAs) in the MAINTENANCE_PLAN column, they’re being filled in with "Unplanned" based on the case description, it makes sense to assume that if we don’t know the maintenance plan, it was likely an unplanned maintenance activity. This helps keep the data more consistent and prevents any issues with missing values during the analysis. We did not handle missing values in equipment id and maintenance item column through imputation because item, and id can not be assigned random values based on the median or mode of the column.

For other columns—like ORDER_DESCRIPTION, EQUIPMENT_DESC, and various FUNCTIONAL_AREA fields—any missing values are replaced with "Unknown". This is a simple way of handling missing data. Instead of leaving them blank or removing the rows, we just mark them as "Unknown". This makes sure we don’t lose any records and that the data stays usable for further analysis or modeling.

## General Exploration of the Dataset

### **What are the total maintenance costs incurred across different plants?**
```{r}
# Simulate maintenance cost as a function of actual work time
data$MAINTENANCE_COST <- data$ACTUAL_WORK_IN_MINUTES * 10  # Assuming cost is 10 units per minute of work

# Summarize total maintenance costs by plant
total_costs_by_plant <- data %>%
  group_by(PLANT_ID) %>%
  summarise(total_cost = sum(MAINTENANCE_COST, na.rm = TRUE), .groups = "drop")

# Plot total maintenance costs by plant
ggplot(total_costs_by_plant, aes(x = reorder(PLANT_ID, total_cost), y = total_cost)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  coord_flip() +
  labs(
    title = "Total Maintenance Costs by Plant",
    x = "Plant ID",
    y = "Total Maintenance Cost"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14)
  )

```
This bar chart represents the aggregate maintenance expenses related to several plants, each denoted by its distinct "Plant ID." The data indicates that Plant G261 has the greatest maintenance expenses, succeeded by G221 and G291. The significant gap between G261 and the others may suggest that it includes either more machinery or equipment requiring more regular or expensive maintenance actions. This visualization aids in identifying high-cost plants, facilitating resource allocation for optimization and cost-reduction initiatives. Understanding these expenses across facilities could support conclusions regarding maintenance prioritizing and prospective investment in more efficient equipment or predictive maintenance methods.

### **How do costs vary by maintenance type and machine age?**
```{r}
# Simulate machine age if needed, otherwise use MACHINE_AGE column
data$MACHINE_AGE <- as.numeric(difftime(Sys.Date(), as.Date(data$EQUIP_START_UP_DATE), units = "days"))

# Summarize costs by maintenance type and machine age
costs_by_type_age <- data %>%
  group_by(MAINTENANCE_TYPE_DESCRIPTION, MACHINE_AGE) %>%
  summarise(avg_cost = mean(MAINTENANCE_COST, na.rm = TRUE), .groups = "drop")

# Plot variation of costs by maintenance type and machine age
ggplot(costs_by_type_age, aes(x = MACHINE_AGE, y = avg_cost, color = MAINTENANCE_TYPE_DESCRIPTION)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Maintenance Costs by Maintenance Type and Machine Age",
    x = "Machine Age (Days)",
    y = "Average Maintenance Cost"
  ) +
  theme_minimal(base_size = 11) +
  theme(
    plot.title = element_text(hjust = 0.8, size = 18, face = "bold"),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14),
    legend.title = element_text(size = 14),
    legend.text = element_text(size = 12)
  )


```

This chart shows the Average Maintenance Cost across machine age and different maintenance types. Corrective Maintenance has the highest costs, particularly for machines older than 10,000 days, with costs exceeding 6,000. Breakdown Maintenance and Capital Orders also show fluctuating costs as machine age increases, but remain lower compared to corrective maintenance. Machines older than 5,000 days exhibit more variability in costs, suggesting that aging machines require more expensive repairs. The Unknown category has scattered data, indicating inconsistency in classification. Overall, older machines tend to incur higher maintenance costs, especially for corrective and breakdown activities.

### **What financial impact does unplanned downtime have on production?**

```{r}
# Summarize financial impact of unplanned downtime
# Assume a higher cost for unplanned downtime
data$FINANCIAL_IMPACT <- ifelse(data$MAINTENANCE_ACTIVITY_TYPE == "Unplanned",
                                data$ACTUAL_WORK_IN_MINUTES * 20,  # 20 units per minute for unplanned
                                data$ACTUAL_WORK_IN_MINUTES * 10)  # 10 units per minute for planned

# Summarize total financial impact by maintenance activity type
financial_impact <- data %>%
  group_by(MAINTENANCE_ACTIVITY_TYPE) %>%
  summarise(total_impact = sum(FINANCIAL_IMPACT, na.rm = TRUE), .groups = "drop")

# Plot financial impact of unplanned vs planned maintenance
ggplot(financial_impact, aes(x = MAINTENANCE_ACTIVITY_TYPE, y = total_impact, fill = MAINTENANCE_ACTIVITY_TYPE)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  scale_fill_manual(values = c("red", "green")) +
  labs(
    title = "Financial Impact of Unplanned vs Planned Downtime",
    x = "Maintenance Activity Type",
    y = "Total Financial Impact"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
    axis.title.x = element_text(size = 14),
    axis.title.y = element_text(size = 14)
  )

```

The graph indicates how planned and unplanned downtime varies significantly in terms of cost. The green bar shows that unplanned downtime has a far larger cost impact than scheduled downtime. The difference highlights the value of preventative maintenance techniques in avoiding expensive unforeseen disruptions. The whole financial load can be greatly decreased by emphasizing the reduction of unscheduled maintenance by predictive or preventive methods, which will increase production efficiency and cost-effectiveness.

